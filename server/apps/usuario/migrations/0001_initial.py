# Generated by Django 5.0.1 on 2024-02-13 19:42

import apps.usuario.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('nome', models.CharField(help_text='Digite o seu nome completo', max_length=500, validators=[django.core.validators.RegexValidator('^[a-zA-ZÀ-ÿ\\s]*$', message='Nome Completo deve conter apenas letras'), apps.usuario.models.User.validar_texto], verbose_name='Nome do Usuário')),
                ('cpf', models.CharField(help_text='Digite seu CPF e no formato XXX.XXX.XXX-XX', max_length=14, unique=True, validators=[apps.usuario.models.User.validar_cpf], verbose_name='CPF')),
                ('email', models.EmailField(help_text='Digite o seu e-mail', max_length=500, unique=True, verbose_name='E-mail')),
                ('genero', models.CharField(blank=True, choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro')], help_text='Digite o seu gênero', max_length=10, null=True, verbose_name='Gênero')),
                ('estado_civil', models.CharField(blank=True, choices=[('Solteiro(a)', 'Solteiro(a)'), ('Casado(a)', 'Casado(a)'), ('Divorciado(a)', 'Divorciado(a)'), ('Viúvo(a)', 'Viúvo(a)')], help_text='Digite o seu estado civil', max_length=15, null=True, verbose_name='Estado Civil')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('telefone', models.CharField(blank=True, help_text='número de telefone no formato (XX) XXXXX-XXXX', max_length=19, null=True, unique=True, validators=[django.core.validators.RegexValidator('\\([0-9]{2}\\) [0-9]{5}-[0-9]{4}', message='Digite um telefone válido com DDD')])),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Super-usuário')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', apps.usuario.models.CustomUserManager()),
            ],
        ),
    ]
